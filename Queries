-- Case Study Questions

--1) Which product has the highest price? Only return a single row.

select product_name, price
from products
order by price desc
limit 1;

--2) Which customer has made the most orders?

select concat(c.first_name,' ',c.last_name) as full_name,
count(o.order_id) as Total_orders
from customers c
left join orders o
on c.customer_id = o.customer_id
group by 1
having count(o.order_id) > 1
limit 1;

--3) What’s the total revenue per product?

select p.product_id, sum(p.price * oi.quantity) as Total_revenue
from products p
join order_items oi
on p.product_id = oi.product_id
group by 1
order by 2 desc;

--4) Find the day with the highest revenue.

select distinct o.order_date, extract(day from o.order_date) as Day, sum(p.price * oi.quantity) as Total_revenue
from order_items oi 
join products p
on oi.product_id = p.product_id
join orders o
on o.order_id = oi.order_id
group by 1
order by 2 desc
limit 1;

--5) Find the first order (by date) for each customer.

select distinct(a.customer_id),
concat(b.first_name,' ',b.last_name) as full_name,
min(a.order_date) as first_order_date 
from orders a 
inner join customers b on
a.customer_id=b.customer_id
group by a.customer_id,b.first_name,b.last_name;

--6) Find the top 3 customers who have ordered the most distinct products

select concat(C.first_name,' ',C.last_name) as full_name, count(distinct P.product_name) as Uniqueproduct 
from order_items OI 
inner join orders O on OI.order_id=O.order_id
inner join customers C on C.customer_id= O.customer_id
inner join products P on P.product_id=OI.product_id
group by C.first_name,C.last_name
order by Uniqueproduct desc
limit 3;

--7) Which product has been bought the least in terms of quantity?

with cte as 
(select P.*, O.order_id,O.quantity 
 from products P 
 inner join order_items O
 on P.product_id=O.product_id)
 
select product_id,product_name,SUM(quantity) as Total_no_of_quantity
from cte
group by product_id,product_name
order by Total_no_of_quantity
limit 1;

--8) What is the median order total?

with cte as (select O.order_id, SUM( price*quantity) as Total from orders O inner join order_items OI
on  O.order_id=OI.order_id
inner join products P on OI.product_id=P.product_id
group by O.order_id)
select PERCENTILE_CONT(0.5)
within group (order by Total) as Median_price
from cte; 

--9) For each order, determine if it was ‘Expensive’ (total over 300), ‘Affordable’ (total over 100), or ‘Cheap’.

with cte as
(select oi.order_id, sum(price*quantity) as Total_revenue
 from order_items oi
 join products p
 on p.product_id = oi.product_id
 join orders o
 on o.order_id = oi.order_id
 group by 1)
 
 select order_id, Total_revenue,
 (case when Total_revenue > 300 then 'expensive'
  	   when Total_revenue > 100 then 'affordable'
  	   else 'cheap'
  end) as Total_price 
 from cte
 order by 1;

--10) Find customers who have ordered the product with the highest price.

with cte as
(select C.customer_id, concat(C.first_name,' ',C.last_name) as full_name,
 P.price,
 dense_rank() over(order by P.price desc) as grade
 from order_items OI
 inner join products P
 on OI.product_id = P.product_id
 inner join orders O
 on O.order_id = OI.order_id
 inner join customers C
 on C.customer_id = O.customer_id
 group by 1,2,3)

select full_name
from cte
where grade = 1;
